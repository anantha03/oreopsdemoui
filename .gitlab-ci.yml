# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  # - test-variable
  # - build
  - deploy

# test-variable-job:
#     stage: test-variable
#     script:
#         - echo $user_name
#         - echo $user_password
# build-job:       # This job runs in the build stage, which runs first.
#   image: docker:latest
#   services:
#     - docker:18.09.7-dind
#   stage: build
#   script:
#     - docker build -t aksdevopsacr12.azurecr.io/goproject .
#     - docker login aksdevopsacr12.azurecr.io -u $user_name -p $user_password
#     - docker push aksdevopsacr12.azurecr.io/goproject



deploy-job:      # This job runs in the deploy stage.
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  script:
    - kubectl config get-contexts
    - kubectl config use-context arthi300893/oreopsdemoservice:kubeagent
    - kubectl apply -f kube-manifests
    - kubectl get pods

    
